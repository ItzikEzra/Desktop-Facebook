<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_BestTImePic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Iyn1EAapAAAAf//Z
</value>
  </data>
</root>